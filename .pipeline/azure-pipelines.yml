name: yaml

trigger: none

pool: Daisy Game Pool
parameters:
  - name: environments
    displayName: environment
    default: dev
    values:
      - dev
      - prod

stages:

  - stage: Testing 
    
    jobs:
      - job: Tfsec
        steps:
          - task: tfsec@1
            displayName: Code Security Scan
            inputs:
              version: 'v1.26.0'
              dir: '$(System.DefaultWorkingDirectory)/environments/dev'

      - job: ManualValidation
        dependsOn: Tfsec
        displayName: Manual Validation 
        pool: server    
        steps:
          - task: ManualValidation@1
            inputs:
              notifyUsers: 'Sanidhya1119@outlook.com'
              approvers: 'Sanidhya1119@outlook.com'
              allowApproversToApproveTheirOwnRuns: true
           

  - stage: Initialization_Planning
    dependsOn: Testing
    jobs:
      - job: TerraformInitAndPlan
        
        displayName: Terraform Init And Plan
        steps:
          - task: TerraformTaskV4@4
            displayName: Terraform Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/environments/dev'
              backendServiceArm: 'OpsCatalyst'
              backendAzureRmResourceGroupName: 'pipeline'
              backendAzureRmStorageAccountName: 'pipestore'
              backendAzureRmContainerName: 'daisygame'
              backendAzureRmKey: '${{parameters.environments}}.terraform.tfstate'
            

          - task: TerraformTaskV4@4
            displayName: Terraform Plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(System.DefaultWorkingDirectory)/environments/dev'
              commandOptions: '-var-file=${{parameters.environments}}.terraform.tfvars'
              environmentServiceNameAzureRM: 'OpsCatalyst'


 
          


  - stage: Implementation    
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:

      - job: ManualValidation
        
        displayName: Manual Validation 
        pool: server    
        steps:
          - task: ManualValidation@1
            inputs:
              notifyUsers: 'Sanidhya1119@outlook.com'
              approvers: 'Sanidhya1119@outlook.com'
              allowApproversToApproveTheirOwnRuns: true

      - job: TerraformInitAndApply
        dependsOn: ManualValidation
        displayName: Terraform Init And Apply
        steps:
          - task: TerraformTaskV4@4
            displayName: Terraform Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/environments/dev'
              backendServiceArm: 'OpsCatalyst'
              backendAzureRmResourceGroupName: 'pipeline'
              backendAzureRmStorageAccountName: 'pipestore'
              backendAzureRmContainerName: 'daisygame'
              backendAzureRmKey: '${{parameters.environments}}.terraform.tfstate'
          - task: TerraformTaskV4@4
            displayName: Terraform Apply
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(System.DefaultWorkingDirectory)/environments/dev'
              commandOptions: '-var-file=${{parameters.environments}}.terraform.tfvars'
              environmentServiceNameAzureRM: 'OpsCatalyst'